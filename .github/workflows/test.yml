name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  checks: write

jobs:

  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-11, macos-12, macos-13, macos-14 ]
        shell: [ bash, sh ]
        container: [ null ]
        container_options: [ "-" ]
        prepare: [ 'echo "nothing to prepare."' ]
        include:
          - shell: bash
            container: quay.io/pypa/manylinux_2_28_x86_64
            container_options: "--user root --workdir /"
            os: ubuntu-latest
          - shell: bash
            container: quay.io/pypa/manylinux_2_28_x86_64
            container_options: "--workdir /"
            os: ubuntu-latest
          - shell: bash
            container: debian
            container_options: "--workdir /"
            os: ubuntu-latest
            prepare: 'DEBIAN_FRONTEND=noninteractive sudo apt-get -y update && sudo apt-get -y install git'
          - shell: sh
            container: debian
            container_options: "--workdir /"
            os: ubuntu-latest
            prepare: 'DEBIAN_FRONTEND=noninteractive sudo apt-get -y update && sudo apt-get -y install git'
          - shell: bash
            container: archlinux
            container_options: "--workdir /"
            os: ubuntu-latest
            prepare: 'sudo pacman -S git'
          - shell: sh
            container: archlinux
            container_options: "--workdir /"
            os: ubuntu-latest
            prepare: 'sudo pacman -S git'
          
    runs-on: ${{ matrix.os }}
    container:
      image: ${{ matrix.container }}
      options: ${{ matrix.container_options }}
    steps:
    - name: Prepare
      shell: bash
      run: ${{ matrix.prepare }}
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Setup wrapper
      uses: ./
    - name: Print shell
      shell: wrap-shell {0}
      env:
         WRAP_SHELL: ${{ matrix.shell }}
      run: |
        echo "Running: $__RUNNING_SHELL"
        if [ "$__RUNNING_SHELL" != "${{ matrix.shell }}" ]; then
          echo "Expected: ${{ matrix.shell }}"
          exit 1
        fi